<!DOCTYPE html>
<html>
@using Epam.Blog.Bll;
@using Epam.Blog.Entities;
@{

    Page.Title = "Account Management";
    UserBll usersBll = new UserBll();
    WebUserBll webUserBll = new WebUserBll();
    RoleBll roleBll = new RoleBll();
    var mode = usersBll.Mode;
    Layout = "~/Admin/_AdminLayout.cshtml";

    if (!webUserBll.HasRole(UsersRolesMap.Admin))
    {
        Response.Redirect("~/admin/");
    }

}
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>




    @{

        if (!mode.IsEmpty())
        {
            var account = usersBll.Current;
            var roles = roleBll.GetAllRole();

            var rolesForUser = webUserBll.GetRolesForUser((int)account.Id);

            <div>
                <form name="account" method="post" action="~/Admin/Account.ashx">
                    @AntiForgery.GetHtml()
                    <input type="hidden" name="mode" value="@mode" />
                    <input type="hidden" name="accountId" value="@account.Id" />
                    <p>Username: <input type="text" name="accountName" value="@account.UserName" /></p>
                    <p>Password: <input type="password" name="accountPassword1" value="" /></p>
                    <p>Password: <input type="password" name="accountPassword2" value="" /></p>

                    <p>Email: <input type="text" name="accountEmail" value="@account.Email" /></p>
                    <p>
                        <select name="accountRoles" multiple>
                            @foreach (var role in roles)
                            {
                                <option value="@role.Id" selected="@rolesForUser.Contains((string)role.Name)">@role.Name</option>
                            }
                        </select>
                    </p>
                    <p><input type="submit" name="accountSubmit" value="Submit" /></p>
                </form>
            </div>
        }
        else
        {
            @AntiForgery.GetHtml()

            <p><a href="~/Admin/Account/new/">Create New User</a></p>

            var grid = new WebGrid(source: usersBll.GetAllUsers(orderBy: "UserName"),
                rowsPerPage: 30);
            @grid.GetHtml(
             columns: grid.Columns(
                 grid.Column(format: @<a href="~/Admin/account/edit/@item.UserName">Edit</a>),
                                                   grid.Column(format: @<a data-mode="delete" data-action="/admin/Account.ashx" data-item="@item.UserName" href="~/Admin/account/delete/@item.UserName">Delete</a>),
                                                             grid.Column("Username", header: "User Name"),
                                                             grid.Column("Email", header: "Email Address")));


        }
    }

</body>
</html>
